version: '3.8'
services:
  # This is the configuration for our PostgreSQL database container
  # Note the `postgres` name is important, in out Go app when we refer
  # to  `host: "postgres"` that value is mapped on the network to the 
  # address of this container.
  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      # You can set the value of environment variables
      # in your docker-compose.yml file
      # Our GO app will use these to connect
      # to the database
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      # Standard port for PostgreSQL databases
      - "127.0.0.1:5432:5432"
    volumes:
      # When the PostgresSQL container is started it will run any scripts
      # provided in the `docker-entrypoint-initdb.d` directory, this connects
      # our seed file to that directory so that it gets run
      - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql
  # grafana:
  #   image: grafana/grafana:10.0.2
  #   hostname: grafana
  #   depends_on:
  #     - graphite
  #   links:
  #     - graphite
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     # See https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/
  #     - GF_SERVER_HTTP_PORT=3001
  #     - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
  #     - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #     - GF_USERS_ALLOW_ORG_CREATE=false
  #     - GF_INSTALL_PLUGINS=grafana-piechart-panel,marcusolsson-json-datasource,marcusolsson-dynamictext-panel
  #     - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/Welcome.json
  #   volumes:
  #     - grafana:/var/lib/grafana
  #     - ./dashboard/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #     - ./dashboard/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
  #     - ./dashboard/grafana/provisioning/dashboards:/var/lib/grafana/dashboards
  #   restart: always
  # graphite:
  #   image: sitespeedio/graphite:1.1.10-3
  #   hostname: graphite
  #   ports:
  #     - "2003:2003"
  #     - "8080:80"
  #   restart: always
  #   volumes:
  #     # In production, you should configure/map these to your container
  #     # Make sure whisper and graphite.db/grafana.db lives outside your container
  #     # https://www.sitespeed.io/documentation/sitespeed.io/graphite/#graphite-for-production-important
  #     - whisper:/opt/graphite/storage/whisper
  #     # Download an empty graphite.db from https://github.com/sitespeedio/sitespeed.io/tree/main/docker/graphite
  #     - ./dashboard/graphite/graphite.db:/opt/graphite/storage/graphite.db
  #     # And put the configuration files on your server, configure them as you need
  #     # Download from https://github.com/sitespeedio/docker-graphite-statsd/tree/main/conf/graphite
  #     - ./dashboard/graphite/conf/storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf
  #     - ./dashboard/graphite/conf/storage-aggregation.conf:/opt/graphite/conf/storage-aggregation.conf
  #     - ./dashboard/graphite/conf/carbon.conf:/opt/graphite/conf/carbon.conf
volumes:
    grafana:
    whisper: